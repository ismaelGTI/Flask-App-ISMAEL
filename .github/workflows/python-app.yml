# GitHub Actions workflow para testear y construir la app Flask
name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true

    - name: Run tests
      run: |
        pip install pytest
        pytest --maxfail=1 --disable-warnings --tb=short --junitxml=pytest-report.xml
    - name: Publicar resumen de tests en GitHub Step Summary
      if: always()
      run: |
        echo "### 🧪 Resumen de tests Pytest" >> $GITHUB_STEP_SUMMARY
        if [ -f pytest-report.xml ]; then
          # Extraer línea con atributos, aunque no tenga skipped
          STATS=$(grep -o 'testsuite tests="[0-9]*" failures="[0-9]*" errors="[0-9]*"[^"]*' pytest-report.xml | head -1)
          TOTAL=$(echo "$STATS" | sed -E 's/.*tests="([0-9]+)".*/\1/')
          FAIL=$(echo "$STATS" | sed -E 's/.*failures="([0-9]+)".*/\1/')
          ERRORS=$(echo "$STATS" | sed -E 's/.*errors="([0-9]+)".*/\1/')
          # Si skipped no está, ponerlo a 0
          if echo "$STATS" | grep -q 'skipped="'; then
            SKIP=$(echo "$STATS" | sed -E 's/.*skipped="([0-9]+)".*/\1/')
          else
            SKIP=0
          fi
          # Si alguna variable está vacía, poner a 0
          TOTAL=${TOTAL:-0}
          FAIL=${FAIL:-0}
          ERRORS=${ERRORS:-0}
          SKIP=${SKIP:-0}
          PASS=$((TOTAL-FAIL-ERRORS-SKIP))
          echo "**Resultados:**" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Pasados: $PASS" >> $GITHUB_STEP_SUMMARY
          echo "- ❌ Fallos: $FAIL" >> $GITHUB_STEP_SUMMARY
          echo "- ⚠️ Errores: $ERRORS" >> $GITHUB_STEP_SUMMARY
          echo "- ⏭️ Saltados: $SKIP" >> $GITHUB_STEP_SUMMARY
          echo "- 🔢 Total: $TOTAL" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "<details><summary>Ver reporte XML completo</summary>" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat pytest-report.xml >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY
        else
          echo 'No se encontró el reporte XML de Pytest.' >> $GITHUB_STEP_SUMMARY
        fi
        fi
        fi
